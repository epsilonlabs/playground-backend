name: Main branch

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - .github/workflows/dockerFromTags.yml
      - .github/workflows/pull_requests.yml
      - '**/README.md'
      - CONTRIBUTING.md
  workflow_dispatch:
  schedule:
    # Weekly rebuild of Docker image
    - cron: '38 11 * * 1'

concurrency:
  group: docker-image
  cancel-in-progress: true

env:
  AWS_REGION: us-east-1

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Login to GitHub Container Registry
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17.0.9'
        distribution: 'graalvm'
    - name: Set up Node
      uses: actions/setup-node@v4.0.2
      with:
        node-version: '16.x'
    - name: Install Node dependencies
      run: npm ci
      working-directory: ./ep-tool-server
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@94baf225fe0a508e581a564467443d0e2379123b
    - name: Build with Gradle
      run: |
        PROJECT_VERSION="$(grep projectVersion gradle.properties | awk -F '=' '{print $2}')"
        ./gradlew build dockerPush -P epsilonVersion=2.8.0 -P "dockerTags=latest,epsilon2.8,${PROJECT_VERSION},${PROJECT_VERSION}-epsilon2.8"
        ./gradlew clean build dockerPush -P epsilonVersion=2.6.0 -P "dockerTags=epsilon2.6,${PROJECT_VERSION},${PROJECT_VERSION}-epsilon2.6"
        ./gradlew clean build dockerPush -P epsilonVersion=2.5.0 -P "dockerTags=epsilon2.5,${PROJECT_VERSION}-epsilon2.5"
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: '!cancelled()'
      with:
        name: s3-test-reports
        path: shorturl-s3-lambda/build/reports/tests
    - name: Publish package
      run: ./gradlew publish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
